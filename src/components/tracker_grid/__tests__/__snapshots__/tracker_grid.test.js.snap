// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders a TrackerGrid using Snapshots 1`] = `
<RCTScrollView
  data={
    Array [
      Array [
        Object {
          "image": Object {
            "testUri": "../../../src/assets/images/strava-logo.png",
          },
          "provider": "Strava",
        },
        Object {
          "image": Object {
            "testUri": "../../../src/assets/images/garmin-logo.png",
          },
          "provider": "Garmin",
        },
      ],
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  itemWidth={null}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  numColumns={1}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  scrollEventThrottle={50}
  stickyHeaderIndices={Array []}
  style={
    Array [
      Object {
        "paddingTop": 10,
      },
      Object {
        "paddingTop": 40,
      },
    ]
  }
  updateCellsBatchingPeriod={50}
  viewabilityConfigCallbackPairs={Array []}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "flexDirection": "row",
            "marginBottom": 10,
            "paddingBottom": 10,
            "paddingLeft": 10,
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "column",
              "justifyContent": "center",
              "paddingRight": 10,
              "width": 148,
            }
          }
        >
          <View
            style={Object {}}
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={null}
            >
              <View
                style={
                  Array [
                    Object {
                      "borderRadius": 5,
                      "height": 150,
                      "justifyContent": "flex-end",
                      "padding": 10,
                    },
                    Object {
                      "backgroundColor": [MockFunction],
                    },
                  ]
                }
              >
                <Image
                  activeOpacity={50}
                  style={
                    Object {
                      "alignSelf": "center",
                      "flex": 1,
                      "height": 80,
                      "resizeMode": "contain",
                      "width": 80,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 16,
                      "fontWeight": "600",
                    }
                  }
                >
                  Strava
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "flexDirection": "column",
              "justifyContent": "center",
              "paddingRight": 10,
              "width": 148,
            }
          }
        >
          <View
            style={Object {}}
          >
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={null}
            >
              <View
                style={
                  Array [
                    Object {
                      "borderRadius": 5,
                      "height": 150,
                      "justifyContent": "flex-end",
                      "padding": 10,
                    },
                    Object {
                      "backgroundColor": [MockFunction],
                    },
                  ]
                }
              >
                <Image
                  activeOpacity={50}
                  style={
                    Object {
                      "alignSelf": "center",
                      "flex": 1,
                      "height": 80,
                      "resizeMode": "contain",
                      "width": 80,
                    }
                  }
                />
                <Text
                  style={
                    Object {
                      "color": "#fff",
                      "fontSize": 16,
                      "fontWeight": "600",
                    }
                  }
                >
                  Garmin
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
